
<!-- client -->
<table id="main-table" class="table table-striped table-bordered table-hover" width="100%">
  <thead>
    <tr>
      
        
        <th data-hide="phone,tablet"
        data-class="" class="no-sort rowid">
          編號
        </th>
      
        
        <th data-hide="phone,tablet"
        data-class="" class="no-sort name">
          分類
        </th>
      
        
        <th data-hide=""
        data-class="" class="no-sort key">
          小分類
        </th>
      
        
        <th data-hide=""
        data-class="" class="no-sort description">
          描述
        </th>
      
        
        <th data-hide=""
        data-class="" class="no-sort value">
          數值
        </th>
      
        
        <th data-hide=""
        data-class="" class="no-sort type">
          類型
        </th>
      
      <th width="80" data-hide="phone,tablet" class="icons"></th>
    </tr>
  </thead>
  <!-- client only -->
  <tbody>
    <tr v-for="item in data.items">
      
        <td></td>

        <td>{{ item.name}}</td>
      
        <!-- <td>{{ item.key}}</td> -->
      
        <!-- <td>{{ item.description}}</td> -->
      
        <td>{{ item.value}}</td>
      
        <!-- <td>{{ item.type}}</td> -->
      
      <td align="center" style="cursor: pointer;">
        <div class="row">
          <a class="btn btn-default btn-xs" role="button" v-on:click="show(item.id)">
            <i class="fa-fw fa fa-eye text-muted" />
          </a>
          <a class="btn btn-default btn-xs" role="button" v-on:click="edit(item.id)">
            <i class="fa-fw fa fa-pencil-square-o text-muted"/>
          </a>
        </div>
      </td>
    </tr>
  </tbody>
 </table>


<script type="text/javascript">
  var pagefunction = function() {

    // server only
    var columns = [
      
          { "data": "name" }, 



          { "data": "name" },
        
      
        
          { "data": "key" },
        
      
        
          { "data": "description" },
        
      
        
          { "data": "value" },
        
      
        
          { "data": "type" },
        
      
        { "data": null },
    ]

    // server only
    var rowid = 1;
    var columnDefs = [
        
      
        
      
        
      
        
      
        
      {
        "targets"  : 'rowid',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-rowid">' + rowid + '</div>';
          return colBody;
          rowid+=1;
        }
      },
      {
        "targets"  : 'name',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-name">' + row.name + '</div>';
          return colBody;
        }
      },
      {
        "targets"  : 'key',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-key">' + row.key + '</div>';
          rowid+=1;
          return colBody;
        }
      },
      {
        "targets"  : 'description',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-description">' + ((row.description === null) ? '': row.description || '') + '</div>';
          return colBody;
        }
      },
      {
        "targets"  : 'value',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-value">' + row.value + '</div>';
          return colBody;
        }
      },
      {
        "targets"  : 'type',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody = '<div class="td-type">' + row.type + '</div>';
          return colBody;
        }
      },
      {
        "targets"  : 'icons',
        "orderable": false,
        "searchable": false,
        "render": function ( data, type, row ) {
          var colBody =
          '<div class="row-action-buttons hidden-xs hidden-sm">'+
          '<a name="showDataButton" class="btn btn-default btn-xs" role="button" data-id="'+row.id+'">'+
          '<i class="fa-fw fa fa-eye text-muted" />'+
          '</a>'+
          '<a name="editDataButton" class="btn btn-default btn-xs" role="button" data-id="'+row.id+'">'+
          '<i class="fa-fw fa fa-pencil-square-o text-muted"/>'+
          '</a>'+
          '</div>';
          return colBody;
        }
      },
    ]
    var serverSidePaging = <%= (data.serverSidePaging != null)?data.serverSidePaging:false %>;
    <%- include vue.ejs %>
    appMain.$mount("#main-index");
    appMain.loadItems(function() {
      appMain.renderTable(getConfig());
      appMain.filterConfig();
      appMain.hidenSearch();
      appMain.hideIndex();
    });
    appMain.disableNew();
  };
  function getconfig() {
    var query = location.hash.split('/').reverse()[0].split('?')[1];
    if(typeof query === 'undefined') {
      query = '';
    }
    return query;
  }
</script>
